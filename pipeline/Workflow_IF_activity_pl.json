{
	"name": "Workflow_IF_activity_pl",
	"properties": {
		"description": "Conditional File processing",
		"activities": [
			{
				"name": "Get File Names",
				"description": "Scan the file path on your source storage store and get the container list.",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"fieldList": [
						"childItems"
					]
				}
			},
			{
				"name": "Move Files",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get File Names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.FileAction,'move')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy Data Files",
							"description": "Copy each container from source storage store to destination store.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@concat(pipeline().parameters.SourceFilePath,'/',item().name)"
								},
								{
									"name": "Destination",
									"value": "@concat(pipeline().parameters.DestinationFilePath,'/',item().name)"
								}
							],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								},
								"sink": {
									"type": "BlobSink",
									"copyBehavior": "PreserveHierarchy"
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							}
						},
						{
							"name": "Delete Data Files",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy Data Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"enableLogging": true,
								"recursive": true
							}
						}
					]
				}
			},
			{
				"name": "Copy Files",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get File Names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.FileAction,'copy')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy Data Files 2",
							"description": "Copy each container from source storage store to destination store.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@concat(pipeline().parameters.SourceFilePath,'/',item().name)"
								},
								{
									"name": "Destination",
									"value": "@concat(pipeline().parameters.DestinationFilePath,'/',item().name)"
								}
							],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								},
								"sink": {
									"type": "BlobSink",
									"copyBehavior": "PreserveHierarchy"
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							}
						}
					]
				}
			},
			{
				"name": "Delete Files",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get File Names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.FileAction,'delete')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete Data Files 2",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"enableLogging": true,
								"recursive": true
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SourceFilePath": {
				"type": "String",
				"defaultValue": "/storesales"
			},
			"DestinationFilePath": {
				"type": "String",
				"defaultValue": "/storesales-staging"
			},
			"FileAction": {
				"type": "string",
				"defaultValue": "copy"
			}
		},
		"folder": {
			"name": "UsecaseDemo"
		},
		"annotations": []
	}
}